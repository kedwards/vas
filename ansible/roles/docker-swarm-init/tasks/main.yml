---
- name: Check if Swarm has already been Initialized
  shell: docker node ls
  register: swarm_status
  ignore_errors: true

- name: Initialize Docker Swarm - Leader
  shell: >
    docker swarm init
    --advertise-addr={{ hostvars[inventory_hostname]['ansible_eth1']['ipv4']['address'] }}:2377
  when: swarm_status.rc != 0 and inventory_hostname == groups['swarm_managers'][0]
  run_once: true

- name: Get the Manager join-token
  shell: docker swarm join-token --quiet manager
  when: inventory_hostname == groups['swarm_managers'][0]
  register: manager_token

- name: Get the worker join-token
  shell: docker swarm join-token --quiet worker
  when: inventory_hostname == groups['swarm_managers'][0]
  register: worker_token

- name: Add managers
  include_role:
    name: docker-swarm-add-manager
  vars:
    join_token: "{{ hostvars[groups['swarm_managers'][0]]['manager_token']['stdout'] }}"
    join_address: "{{ hostvars[groups['swarm_managers'][0]]['ansible_eth1']['ipv4']['address'] }}:2377"
  when: inventory_hostname != groups['swarm_managers'][0] and inventory_hostname in groups['swarm_managers']

- name: Add workers
  include_role:
    name: docker-swarm-add-worker
  vars:
    join_token: "{{ hostvars[groups['swarm_managers'][0]]['worker_token']['stdout'] }}"
    join_address: "{{ hostvars[groups['swarm_managers'][0]]['ansible_eth1']['ipv4']['address'] }}:2377"
  when: inventory_hostname in groups['swarm_workers']
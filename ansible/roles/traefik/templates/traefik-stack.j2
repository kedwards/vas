version: '3.5'

services:
  reverse-proxy:
    image: traefik:{{ traefik_version }}
    command:
      - "--api.dashboard=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.network={{ traefik_network_name }}"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:{{ traefik_listen_port }}"
      - "--pilot.token={{ traefik_pilot_token }}"
    ports:
      - "{{ traefik_listen_port }}:{{ traefik_listen_port }}"
      - "{{ traefik_admin_port }}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - {{ traefik_network_name }}
    deploy:
      labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`{{ traefik_app_name }}.{{ app_domain_name }}`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users={{ traefikpassword.stdout }}"
      # Dummy service for Swarm port detection. The port can be any valid integer value.
      - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
      mode: global
      placement:
        constraints: [node.role == manager]

networks:
  {{ traefik_network_name }}:
    driver: overlay
    attachable: true
    name: {{ traefik_network_name }}
